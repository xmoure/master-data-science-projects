###### MCA Analysis #############

library("FactoMineR")
library("factoextra")
library("corrplot")

########## DATASET --> POISON
###  The data used here refer to a survey carried out on a sample of children of primary school
###  who suffered from food poisoning. They were asked about their symptoms and about what they ate.


data(poison)
str(poison)
summary(poison)

###### Subsetting features for MCA Analysis
poison.active <- poison[1:55, 5:15]

#### IMPORTANT -->The graphs can be used to identify variable categories with a very low frequency.
####              These types of variables can distort the analysis and should be removed. Here, only for the first 4 features,
####	          please check for the rest of features inside poison-dataset

for (i in 1:4) {
  plot(poison.active[,i], main=colnames(poison.active)[i],
       ylab = "Count", col="steelblue", las = 2)
  }

#### MCA Function

res.mca <- MCA(poison.active, graph = FALSE)
print(res.mca)

##### Results of MCA function --> Visualization and interpretation

####STEP 1 --Eingenvalues and Variance

eig.val <- get_eigenvalue(res.mca)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 45))

####STEP 2 --- Checking Individuals & Features in 2 dimensions

fviz_mca_biplot(res.mca,repel = TRUE, gtheme = theme_minimal())

####STEP 3 ---Graph of variables - Results
var <- get_mca_var(res.mca)
var

### Correlation between variables and principal dimensions
### To visualize the correlation between variables and MCA principal dimensions, use this:

fviz_mca_var(res.mca, choice = "mca.cor",repel = TRUE,ggtheme = theme_minimal())

### Coordinates of categories
fviz_mca_var(res.mca, repel = TRUE, ggtheme = theme_minimal())

### Quality of representation of variable categories
### Please, note that The two dimensions 1 and 2 are sufficient to retain 46%
### of the total inertia (variation) contained in the data. Not all the points are equally well displayed
### in the two dimensions.

fviz_mca_var(res.mca, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),repel = TRUE, ggtheme = theme_minimal())
corrplot(var$cos2, is.corr=FALSE)
fviz_cos2(res.mca, choice = "var", axes = 1:2)

###Note that, variable categories Fish_n, Fish_y, Icecream_n and Icecream_y are not very well represented by the first two dimensions.
### This implies that the position of the corresponding points on the
###scatter plot should be interpreted with some caution. A higher dimensional solution is probably necessary. 

###Contribution of variable categories to the dimensions
##### The variable categories with the larger value, contribute the most to the definition of the dimensions. Variable categories that contribute the most to Dim.1
##### and Dim.2 are the most important in explaining the variability in the data set.  

fviz_contrib(res.mca, choice = "var", axes = 1, top = 15)
fviz_contrib(res.mca, choice = "var", axes = 2, top = 15)

# Total contribution to dimension 1 and 2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 15)
fviz_mca_var(res.mca, col.var = "contrib",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),repel = TRUE,ggtheme = theme_minimal())

####STEP 4 ---Graph of Individuals --Results
ind <- get_mca_ind(res.mca)
ind

### Plots: quality and contribution
fviz_mca_ind(res.mca, col.ind = "cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),repel = TRUE,ggtheme = theme_minimal())
fviz_mca_ind(res.mca, col.ind = "contrib",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),repel = TRUE,ggtheme = theme_minimal())
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 20)

###Color individuals by groups
########## it’s possible to color the individuals using any of the qualitative variables in the initial data table (poison),
########## here, feature--> "Vomiting"
fviz_mca_ind(res.mca, label = "none", habillage = "Vomiting", palette = c("#00AFBB", "#E7B800"),addEllipses = TRUE, ellipse.type = "confidence", ggtheme = theme_minimal())

### Multiple Graphs

fviz_ellipses(res.mca, c("Vomiting", "Fever"), geom = "point")
fviz_ellipses(res.mca, 1:4, geom = "point")

#### STEP 5 --> Dimension description
res.desc <- dimdesc(res.mca, axes = c(1,2))
res.desc
# Description of dimension 1
res.desc[[1]]
# Description of dimension 2
res.desc[[2]]

######ADDITIONAL TOPICS
#### (1) supplementary continuous variables (quanti.sup = 1:2, columns 1 and 2 corresponding to the columns age and time, respectively) 
#### (2) supplementary qualitative variables (quali.sup = 3:4, corresponding to the columns Sick and Sex, respectively). This factor variables are used to color
#### individuals by groups.
#### (3) The data doesn’t contain supplementary individuals. However, for demonstration, we’ll use the individuals 53:55 as supplementary individuals.
#### **** IMPORTANT **** 
#### Supplementary variables and individuals are not used for the determination of the principal dimensions. Their coordinates are predicted using only
#### the information provided
#### by the performed multiple correspondence analysis on active variables/individuals.  

res.mca <- MCA(poison, ind.sup = 53:55, quanti.sup = 1:2, quali.sup = 3:4,  graph=FALSE)

# Supplementary qualitative variable categories
res.mca$quali.sup
# Supplementary quantitative variables
res.mca$quanti
# Supplementary individuals
res.mca$ind.sup

fviz_mca_biplot(res.mca, repel = TRUE,ggtheme = theme_minimal())

fviz_mca_var(res.mca, choice = "mca.cor", repel = TRUE) ### Correlation between variables (active & supplementary) and dimensions
fviz_mca_var(res.mca, repel = TRUE,ggtheme= theme_minimal())
fviz_mca_var(res.mca, choice = "quanti.sup",ggtheme = theme_minimal())
fviz_mca_ind(res.mca, label = "ind.sup", ggtheme = theme_minimal()) ###Supplementary Individuals
# top 5 contributing individuals and variable categories
fviz_mca_biplot(res.mca, select.ind = list(contrib = 5),select.var = list(contrib = 5),ggtheme = theme_minimal())

######SUMMARY
res.mca <- MCA(poison, ind.sup = 53:55, quanti.sup = 1:2, quali.sup = 3:4,  graph=TRUE)
