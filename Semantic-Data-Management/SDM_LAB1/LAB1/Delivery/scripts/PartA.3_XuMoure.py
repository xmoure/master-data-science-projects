# -*- coding: utf-8 -*-
"""Evolving.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cr0CECTEljrAIY5qoM_7iIYqnC3y0wpm
"""
from neo4j import GraphDatabase

URI = "neo4j://localhost:7687"
AUTH = ("neo4j", "sdm12345")

with GraphDatabase.driver(URI, auth=AUTH) as driver:
    driver.verify_connectivity()

uri = "neo4j://localhost:7687"
driver = GraphDatabase.driver(uri, auth=("neo4j", "sdm12345"))


# NODES CREATION

def create_affiliations(session):
    query = '''
         LOAD CSV WITH HEADERS FROM 'file:///affiliations.csv' AS file
         MERGE (org: organization {name: file.OrganizationName, type: file.Type})
         WITH file, org
         MATCH (a:author {id: file.AuthorId})
         CREATE (a) - [:affiliated_to] -> (org)
    '''
    session.run(query)


def update_reviews(session):
    query = '''
        LOAD CSV WITH HEADERS FROM 'file:///author_reviews_paper.csv' AS file
        MATCH (:author {id: file.ReviewerId})-[r:reviews]->(:paper {id: file.PaperId})
        SET r += {review: file.Review, decision: toBoolean(file.Decision)}          
    '''
    session.run(query)


with driver.session() as session:
    create_affiliations(session)
    update_reviews(session)

driver.close()
